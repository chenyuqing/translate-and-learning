0
00:00:00,140 --> 00:00:01,960
Git非常擅长跟踪文件。

1
00:00:02,120 --> 00:00:04,060
但你不必总是追踪每件事

2
00:00:04,380 --> 00:00:05,630
你可能有一些带有密码的文件

3
00:00:05,840 --> 00:00:10,600
或者其他你不想与他人分享的敏感信息。

4
00:00:10,760 --> 00:00:14,460
可以是认证 令牌 api 密钥等等

5
00:00:14,540 --> 00:00:17,060
忽略文件不上传到GitHub。

6
00:00:17,260 --> 00:00:17,660
这是一个很好的方法

7
00:00:17,820 --> 00:00:20,660
添加不需要与他人分享的注释。

8
00:00:20,820 --> 00:00:21,910
例如，一个做事情的好地方。

9
00:00:22,140 --> 00:00:28,370
操作系统和应用程序也可以有不需要共享的设置。

10
00:00:28,590 --> 00:00:35,240
例如，MacOs保存了一个名为“。DS_Store”，以便跟踪这些文件夹中的所有文件。

11
00:00:35,440 --> 00:00:40,970
Visual Studio代码可以在vscode文件夹中有一个本地首选项列表。

12
00:00:41,200 --> 00:00:43,100
为了避免忽略文件，

13
00:00:43,100 --> 00:00:52,600
您可以在项目的根级别创建一个“gitignore”文件，并在该文件中添加您想要忽略的任何类型的文件或模式。

14
00:00:52,610 --> 00:00:57,530
例如，你可以添加一个条目或DS_Store文件以及vscode文件夹。

15
00:00:57,750 --> 00:01:02,450
注意，文件夹的末尾有一个斜杠。如果你的项目需要的话。

16
00:01:02,610 --> 00:01:08,520
你可以在这里添加一个文件，比如一个authentication.js，来存储任何令牌、api密钥等。

17
00:01:09,080 --> 00:01:12,160
另一个常见的文件叫做node_modules。

18
00:01:12,420 --> 00:01:17,800
这是NPM在处理很多web项目时创建的 所以我们可以在这里添加它

19
00:01:18,000 --> 00:01:23,500
您还可以为不想共享的项目的本地注释添加一个新的注释文件夹，

20
00:01:23,500 --> 00:01:28,000
或者您可以创建一个特殊的扩展，并在项目的任何地方添加注释。

21
00:01:28,520 --> 00:01:32,900
顺便说一下 git不会跟踪空文件夹 所以您不必担心这些

22
00:01:32,940 --> 00:01:40,210
我要复制这些 然后回到我的项目 在编辑器中创建一个文件

23
00:01:40,290 --> 00:01:47,640
我把它命名为gitignore，然后把这些东西粘贴到我的文件中。

24
00:01:48,360 --> 00:01:54,030
现在我将继续保存 添加并提交它

25
00:01:57,990 --> 00:02:01,690
一旦提交 我就可以开始添加这些类型的文件夹

26
00:02:01,850 --> 00:02:04,190
我们来添加一个笔记文件夹。

27
00:02:06,430 --> 00:02:16,670
这里的任何东西都不会被跟踪，但我确实需要在这里放一些东西，所以我会添加一个项目待办事项。md文件。

28
00:02:16,750 --> 00:02:22,650
您可以看到Git将这个文件删除 这意味着它不会跟踪这个文件

29
00:02:22,810 --> 00:02:28,390
如果我执行git status，它会说没有东西要提交，即使那是一个新文件。

30
00:02:29,900 --> 00:02:34,000
如果我在这里添加另一个文件并把它放在主文件夹中，

31
00:02:34,000 --> 00:02:45,300
它还是会被忽略，因为这个扩展名在我添加的文件中会被自动忽略。

32
00:02:45,600 --> 00:02:47,420
你还可以使用其他一些技巧

33
00:02:47,500 --> 00:02:51,000
你可以创建自己的全局忽略文件，那样的话，

34
00:02:51,000 --> 00:02:58,200
如果您有很多不同的项目，您可以将其添加为配置变量，指向硬盘驱动器中的一个文件。

35
00:02:58,360 --> 00:03:03,800
你可以在这里添加任何你想要的东西 当你创建一个新项目时 它会自动拾取这个文件

36
00:03:04,100 --> 00:03:06,400
现在，另一件可能发生的事情是

37
00:03:06,400 --> 00:03:16,600
如果在多次提交之后向gitignore文件中添加内容，有时git在本地缓存信息的方式会变得有点脏。

38
00:03:16,800 --> 00:03:26,300
因此，为了清除它，你可以发出这个命令，git rm -r，然后使用缓存选项和一个句号表示当前文件夹，

39
00:03:26,300 --> 00:03:30,600
它会删除所有递归缓存的文件。

40
00:03:31,040 --> 00:03:38,480
您可能需要执行另一个add和git commit，但这将清除您的缓存，并且您的gitignore应该在此之后工作。

41
00:03:38,700 --> 00:03:42,000
我想这么早讨论gitignore文件的原因之一是

42
00:03:42,000 --> 00:03:50,700
你可能已经看到像macOs上的DS_store文件夹这样的文件夹出现了，或者你修改了Visual Studio Code的一些设置，你会看到A-V-S代码文件，你想要确保这些东西在你开始你的项目之前没有被Git跟踪。

43
00:03:50,700 --> 00:03:59,200
你会看到一个VSCode文件，你想要确保在你开始你的项目之前这些东西没有被git跟踪。

44
00:03:59,380 --> 00:04:05,350
因此，在开始设置时使用gitignore文件是一个好主意。
